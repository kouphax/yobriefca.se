--- 
layout: post
title: jQuery 1.4.3 & jQuery Mobile Released
published: true
categories: [JavaScript]
---
  <p>As expected jQuery 1.4.3 and jQuery Mobile (alpha) have dropped today. The official announcements are here</p><ul><li><a href="http://blog.jquery.com/2010/10/16/jquery-143-released/">jQuery 1.4.3</a></li><li><a href="http://jquerymobile.com/2010/10/jquery-mobile-alpha-1-released/">jQuery Mobile</a></li></ul><p>Having had the chance to play around with these already here are a few of the highlights that I think are worth mentioning.&nbsp; This first post will talk about jQuery Core as I need a bit more time with jQuery Mobile to get a better feel for it.</p><h2>jQuery 1.4.3</h2><h3>.data()</h3><p>One of the first cool things that 1.4.3 brings with it is a tweak to the .data() method to allow it to work with not only DOM objects but plain old JavaScript objects as well. So what? Well it opens the doors for the recently announced <a href="http://github.com/jquery/jquery-datalink">Data Linking</a> plugin from Microsoft (<a href="http://yobriefcase.posterous.com/microsofts-trio-of-jquery-plugins">blogged about it before</a>) until now ran on a patched version of jQuery Core. Essentially this give us the ability to perform data binding between UI elements and a model object. This will be familiar to people who use binding in Silverlight. This is all made possible via the newly introduced changeData event that will get fired when .data() is used to modify a data value.</p><p><script src="https://gist.github.com/630059.js"></script></p><p>Another nice new feature rolled into .data() is that all HTML data attributes are automatically parsed as data on initial selection of the element(s). This behaviour is similar to the metadata plugin that has been around for some time. In fact data values are coerced into the applicable types (&ldquo;true&rdquo; becomes Boolean, &ldquo;{o:1}&rdquo; becomes a JavaScript object etc.). This is a nice feature to have but I wonder how resilient it is to weird strings.</p><p>So for,</p><p><script src="https://gist.github.com/630053.js"></script></p><p>The following will be true</p><p><script src="https://gist.github.com/630056.js"></script></p><p>This is going to play very nice with the Unobtrusive JavaScript/Ajax features of the ASP.NET MVC3 (which already employs something similar)</p><h3>Modularity</h3><p>One of the issues many people had with jQuery was it was &ldquo;all or nothing&rdquo;.&nbsp; This was fine at the start but as the file size started to grow people felt that they should be able to only use a small part of jQuery without having to pull the whole thing down.&nbsp; This release sees a fairly big refactoring to try and make this wish a reality.&nbsp; jQuery Core has been broken up into a number of sub modules which gives us the ability to load modules on demand (see <a href="http://yobriefcase.posterous.com/30487860">Modernizr and Require.JS</a>) or simply use the modules we need.</p><h3>jQuery.type()</h3><p>There are plenty of little cross browser differences in the typeof operator and as such it&rsquo;s not always reliable.&nbsp; The jQuery type method abstracts out all those little quirks to correctly determine arrays etc.</p><p><script src="https://gist.github.com/630195.js"></script></p><h3>And The Rest</h3><p>There are a load more improvements and tweaks in 1.4.3 that are fully explained in the original announcement including,</p><ul><li>Performance tweaks across CSS and Traversal modules</li><li>Tweak to allow pausing the DOM Ready event until explicitly specified</li><li>Event helpers can now be passed data objects</li></ul><p>Now onto jQuery Mobile&hellip;.</p>