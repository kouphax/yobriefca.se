---
layout: post
title: "Fear of Code"
date: 2012-08-05 20:36
comments: true
categories: [Craftsmanship]
---

More silly wishy washy nonsense - take what you will.

Recently Thomas Fuchs has this to say on twitter,

<blockquote class="twitter-tweet"><p>As a programmer, you should be afraid of code, and eliminate as much as possible.</p>&mdash; Thomas Fuchs (@thomasfuchs) <a href="https://twitter.com/thomasfuchs/status/230871987881390081" data-datetime="2012-08-02T03:45:45+00:00">August 2, 2012</a></blockquote>
<script src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

Its great, I love this stuff and it got me thinking and I thought why not put my thoughts up here, right?  After all this is what this place is all about.

Rather than describe the emotion as fear ("be afraid of code") i'd posit that, as a programmer, you should be respectful of code.  Rather than eliminate as much as possible you should conserve it as much as possible - don't write it in the first place.  

A while back I posted something similar on Twitter - I can't find the tweet right now but it went a little something like this,

> Adding code is great, removing code is greater but not writing the code in the first place is greatest

As a developer it is very easy to fall into the trap of creating some sort of highly reusable complex masterpiece that is going to change the way we write code forever.  But down that road, madness lies.  Desigining too much, adding too many features, creating too many abstractions, handling every single edge case, writing too many tests - all this stuff is just extra complexity, extra code that simply muddies the solution and makes it harder for someone to understand the solution.  More code doesn't solve the problem faster, more code doesn't make things easier, more code doesn't help.

In other words - writing too much code, regardless of quality is just a selfish act.  That goes for 3rd party code too.

Quit it.
