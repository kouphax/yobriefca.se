<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[<span class="label" style="margin-right:10px;"><a href="/" style="text-decoration:none; text-transform:none; color:#fff">&larr;</a></span>Apache | Yo Briefcase!]]></title>
  <link href="http://yobriefca.se/blog/categories/apache/atom.xml" rel="self"/>
  <link href="http://yobriefca.se/"/>
  <updated>2012-10-06T10:26:40+01:00</updated>
  <id>http://yobriefca.se/</id>
  <author>
    <name><![CDATA[James Hughes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Securely Serving Static Files on Heroku]]></title>
    <link href="http://yobriefca.se/blog/2012/08/21/securely-serving-static-files-on-heroku/"/>
    <updated>2012-08-21T21:00:00+01:00</updated>
    <id>http://yobriefca.se/blog/2012/08/21/securely-serving-static-files-on-heroku</id>
    <content type="html"><![CDATA[<p>More than once I've had a need to host what is essentially static content on Heroku.  For example when building a simple internal web app for my company that used an existing API or Parse.  Invariably in this situation I have also needed to secure this app - nothing to drastic, no need for multiple user accounts or roles or any such nonsense (we generally run our non-essential systems on the honour system).  Basic auth is more than enough.</p>

<p>So, static content plus basic auth.  Heroku itself doesn't offer basic auth as an option (why would it?) and so you'd need to roll it into your app.  Once I hosted my static stuff inside a Scala/Play! app, once a Sinatra app and the other a Rails app - variety is the spice of life.  But each time I did it I felt a little dirty - it was noticeably slower serving this content from within an app and it seemed rather wasteful.  So, in a bid to stamp out technical debt, I've ripped out all those web frameworks an replaced them with good old Apache.</p>

<p>Now anyone with any knowledge of Apache will already be able to deduce the steps required here - but I want to note it for posterity, for myself, when I forget, in about a week.</p>

<h2>BuildPack</h2>

<p>First things first you'll want to get your hands on a custom <a href="https://devcenter.heroku.com/articles/buildpacks">Heroku BuildPack</a> - these are the things that prepare your app instance with all the software and support it needs to run.</p>

<p>I recommend you fork and clone the <a href="https://github.com/pearkes/heroku-buildpack-static">heroku-buildpack-static</a> buildpack available from pearkes on GitHub.</p>

<h2>.htpassword</h2>

<p>Next you need to generate your <code>.htpasswd</code> file that will serve as your store for your Basic Auth credentials.  The two simplest ways to generate one of these is to either use <a href="http://www.htaccesstools.com/htpasswd-generator/">htaccesstools.com's htpasswd generator</a> or generate on via the command line.</p>

<p>The simplest command to generate one is this,</p>

<pre><code>htpasswd -cb &lt;password_file&gt; &lt;username&gt; &lt;password&gt;
</code></pre>

<p>For example,</p>

<pre><code>htpasswd -cb .htpasswd james password
</code></pre>

<p>Will generate a file in the current directory called .htpasswd (the standard name for these files) with a single entry of username = james and password = password.</p>

<h2>Updating the BuildPack</h2>

<p>Either run the above command in the <code>heroku-buildpack-static/conf</code> folder or move your <code>.htpasswd</code> file into the that folder.</p>

<p>Next up you want to configure apache to authenticate against that generate password file.  Adding the following lines to the <code>httpd.conf</code> file in the <code>heroku-buildpack-static/conf</code> will lock all assets under your apps site down,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="nb">AuthType</span>      Basic
</span><span class='line'><span class="nb">AuthName</span>      <span class="s2">&quot;Authentication Required&quot;</span>
</span><span class='line'><span class="nb">AuthUserFile</span>  <span class="s2">&quot;/app/apache/conf/.htpasswd&quot;</span>
</span><span class='line'><span class="nb">Require</span>       valid-user
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This block should be added to the configuration section starting <code>&lt;Directory /&gt;</code> i.e.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'>  <span class="nt">&lt;Directory</span> <span class="s">/</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>  <span class="nb">Options</span> FollowSymLinks
</span><span class='line'>  <span class="nb">AllowOverride</span> <span class="k">None</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">AuthType</span>      Basic
</span><span class='line'>  <span class="nb">AuthName</span>      <span class="s2">&quot;Authentication Required&quot;</span>
</span><span class='line'>  <span class="nb">AuthUserFile</span>  <span class="s2">&quot;/app/apache/conf/.htpasswd&quot;</span>
</span><span class='line'>  <span class="nb">Require</span>       valid-user
</span><span class='line'>
</span><span class='line'>  <span class="nb">Order</span> deny,allow
</span><span class='line'>  <span class="nb">Deny</span> from <span class="k">all</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/Directory&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>You'll notice the <code>AuthUserFile</code> points to the correct absolute path for our custom .htpasswd file.  If you called it anything else please update this line accordingly.</p>

<p>Commit and push that to your forked repo.</p>

<h2>Using the BuildPack</h2>

<p>Finally we need to tell Heroku to use the custom buildpack.  If you have yet to create an app then you can specify the buildpack during creation,</p>

<pre><code>heroku create &lt;app name&gt; --buildpack &lt;url to your repo&gt;
</code></pre>

<p>If you have created you app already you can add the buildpack through an additional config setting</p>

<pre><code>heroku config:add BUILDPACK_URL=&lt;url to your repo&gt;
</code></pre>

<p>Push your new or updated site to Heroku and watch in awe as your site is that bit more secure.</p>
]]></content>
  </entry>
  
</feed>
