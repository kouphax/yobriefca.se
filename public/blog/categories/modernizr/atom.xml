<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[<span class="label" style="margin-right:10px;"><a href="/" style="text-decoration:none; text-transform:none; color:#fff">&larr;</a></span>Modernizr | Yo Briefcase!]]></title>
  <link href="http://yobriefca.se/blog/categories/modernizr/atom.xml" rel="self"/>
  <link href="http://yobriefca.se/"/>
  <updated>2012-03-19T10:21:34+00:00</updated>
  <id>http://yobriefca.se/</id>
  <author>
    <name><![CDATA[James Hughes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Modernizr & RequireJS]]></title>
    <link href="http://yobriefca.se/blog/2010/10/14/modernizr-requirejs/"/>
    <updated>2010-10-14T00:00:00+01:00</updated>
    <id>http://yobriefca.se/blog/2010/10/14/modernizr-requirejs</id>
    <content type="html"><![CDATA[<p>  <p>I&rsquo;ve been pulling a lot of JavaScript libraries and utilities together to build up a NuPack server as it&rsquo;s by far one of the best ways to distribute client side resources during development.&nbsp; Some of these libraries I have used myself and thought it might be worth mentioning some of them.</p><h2>Modernizr</h2><p>Modernizr is a feature detection library that allows us to test the existence of certain HTML5 features within the browser.&nbsp; This is not only useful when constructing a page and applying styling of JS widgets but also for detecting things such as WebWorkers, Web DB, application cache etc.&nbsp; It supports many things,</p><blockquote class="posterous_medium_quote"><p>@font-face, Canvas, Canvas Text, HTML5 Audio, HTML5 Video, rgba(), hsla(), border-image:, border-radius:, box-shadow:, opacity:, Multiple backgrounds, CSS Animations, CSS Columns, CSS Gradients, CSS Reflections, CSS 2D Transforms, CSS 3D Transforms, CSS Transitions, Geolocation API, localStorage, sessionStorage, SVG, SMIL, SVG Clipping, Drag and Drop, hashchange, X-window Messaging, History Management, applicationCache, Web Sockets, Web Workers, Web SQL Database, IndexedDB, Input Types, Input Attributes</p></blockquote><p>In most cases native support for a feature is always better than an alternative CSS hack or JS script.&nbsp; Rounded Corners are a good example of this.&nbsp; A lot of, but not all, browsers already support rounded corners natively but in a world where people think a site should be <a href="http://dowebsitesneedtolookexactlythesameineverybrowser.com/">identical</a> in all browsers it is often necessary to provide your own solution.&nbsp; This means adding extra work for all browsers.&nbsp; This is where Modernizr comes in.&nbsp; Rather than applying non-native rounded corners to browsers that support them nativley we can do this,</p><script src="http://gist.github.com/628427.js?file=gistfile1.html"></script><p>That way we can always defer to the browser and remove unnecessary processing.&nbsp; But lets take it step further.&nbsp; Obviously for the majority of browsers pulling down a rounded corner plugin is completely pointless as it will never be used.&nbsp; What can we do about that?</p><h2>Require.JS</h2><p>Require.JS is one of many module/script loaders available but the good thing about Require.JS is that is extremely simple.&nbsp; Essentially it injects a script file into the head of the document and fires a callback when ready (there is a bit more configurability held within but that's the gist of it).&nbsp; So lets take the above example and see what we can do about it.&nbsp; We don't want to load scripts unnecessarily (lets leave that up to ASP.NET WebForms, ugh&hellip;. ) so lets only load the rounded corner script when needed,</p><script src="http://gist.github.com/628343.js?file=modernizr.html"></script><p>So basically we only get the extra script pulled down in the few browsers that don&rsquo;t support rounded corners, less processing, less traffic (as long as require.js file size &lt; total size of optional scripts).&nbsp;</p><p>Nice.</p><p>Obviously you need to be a bit more strategic about where you place this code as you can get FOUC if placed after document has fully loaded.&nbsp; Another issue is that Require.JS intentionally doesn&rsquo;t support CSS as there is no guaranteed way to ensure it has loaded across all browser.&nbsp; Thats an easy fix though,</p><script src="http://gist.github.com/628300.js?file=loadcss.js"></script><p>As always I&rsquo;ve put together a nice wee demo app that makes use of these technologies&hellip;. coming to a NuPack server near you too.</p><p><a href="svn://subversion/Playground/trunk/jameshu/Src/Kainos.Internal.RequireAndModernizr" title="svn://subversion/Playground/trunk/jameshu/Src/Kainos.Internal.RequireAndModernizr">svn://subversion/Playground/trunk/jameshu/Src/Kainos.Internal.RequireAndModernizr</a></p><p>Let me know if that works as it uses NuPack (but I don&rsquo;t think that is a requirement to open the project).</p></p>
]]></content>
  </entry>
  
</feed>
