<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[<span class="label" style="margin-right:10px;"><a href="/" style="text-decoration:none; text-transform:none; color:#fff">&larr;</a></span>Ruby | Yo Briefcase!]]></title>
  <link href="http://yobriefca.se/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://yobriefca.se/"/>
  <updated>2012-03-28T13:57:36+01:00</updated>
  <id>http://yobriefca.se/</id>
  <author>
    <name><![CDATA[James Hughes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rbenv and CodeRunner]]></title>
    <link href="http://yobriefca.se/blog/2012/03/22/rbenv-and-coderunner/"/>
    <updated>2012-03-22T10:56:00+00:00</updated>
    <id>http://yobriefca.se/blog/2012/03/22/rbenv-and-coderunner</id>
    <content type="html"><![CDATA[<p>You know <a href="http://krillapps.com/coderunner/">CodeRunner</a> right?  If not maybe you should go check it out.  It's and aptly named little tool for running code snippets in various languages much like what <a href="http://www.linqpad.net/">LinqPad</a> does for the .NET folks.  I've been using it extensivley recently to test out little Ruby and Scala snippets.  Thing is though - I hit a snag.  By default CodeRunner will run the system ruby executable (1.8 in OSX) and I generally use <a href="https://github.com/sstephenson/rbenv">rbenv</a> along with version 1.9.whatever so some of my scripts started behaving a little... odd.</p>

<p>But hey it's an easy fix,</p>

<ul>
<li>Open your CodeRunner Preferences</li>
<li>Select the Languages tab</li>
<li>Select Ruby in the Language List</li>
<li>Change the run command from <code>ruby $filename</code> to <code>~/.rbenv/shims/ruby $filename</code></li>
</ul>


<h2>Before</h2>

<p><img class="borderless" src="/images/blog/coderunnerruby/before.png"></p>

<h2>After</h2>

<p><img class="borderless" src="/images/blog/coderunnerruby/after.png"></p>

<p>Blam - global rbenv version is now the goto version for CodeRunner.  OK so it won't work with rbenv locals but I am sure you can tweak it to make it work (I haven't needed it so never looked).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slim Generator for Octopress]]></title>
    <link href="http://yobriefca.se/blog/2012/03/22/slim-generator-for-octopress/"/>
    <updated>2012-03-22T08:21:00+00:00</updated>
    <id>http://yobriefca.se/blog/2012/03/22/slim-generator-for-octopress</id>
    <content type="html"><![CDATA[<p>So I've been overhauling my web site, which is based on <a href="http://octopress.org">Octopress</a>, lately and have had to jump into the working of Octopress/Jekyll.  It's obviously not the most complicated system in the world but hey it was new to me.</p>

<p>Anyway my current setup features a lot of html based pages (the default markdown approach didn't fit due to styling needs) and it was getting rather noisy.  So I wrote, as there didn't seem to be one out there, a <a href="http://slim-lang.com/">Slim</a> generator.  And here it is,  step back it's VERY COMPLEX....</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;slim&#39;</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">SlimConverter</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">Converter</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;safe true</span>
</span><span class='line'><span class="sr">priority :low</span>
</span><span class='line'>
</span><span class='line'><span class="sr">def matches(ext)</span>
</span><span class='line'><span class="sr">  ext =~ /s</span><span class="n">lim</span><span class="o">/</span><span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">output_ext</span><span class="p">(</span><span class="n">ext</span><span class="p">)</span>
</span><span class='line'>  <span class="s2">&quot;.html&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="no">Slim</span><span class="o">::</span><span class="no">Template</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="n">content</span> <span class="p">}</span><span class="o">.</span><span class="n">render</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="no">StandardError</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">e</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;!!! SLIM Error: &quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="n">message</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Just drop this file (call it anything) into your plugins folder in Jekyll/Octopress and any file with the <code>slim</code> extension will use this converter to generate HTML.  No more noisy HTML for me!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sentimentalizer: A Ruby port of Sentan]]></title>
    <link href="http://yobriefca.se/blog/2012/03/12/sentamentalizer/"/>
    <updated>2012-03-12T19:22:00+00:00</updated>
    <id>http://yobriefca.se/blog/2012/03/12/sentamentalizer</id>
    <content type="html"><![CDATA[<p>In a bid to be at least 1% less stupid I decided to jump into Ruby.  Properly this time, no tinkering with Rails or watching a few videos.  So the first thing I did was take <a href="https://twitter.com/#!/martinrue">@martinrue</a>'s <a href="https://github.com/martinrue/Sentan">Sentan</a> project, fork it, made it run on mono (just because), ported it over to Ruby and renamed it <a href="https://github.com/kouphax/sentimentalizer/">sentimentalizer</a> (but keeping all necessary attribution to Martins work in the README of course).<!-- more -->  I did this for two reasons,</p>

<ol>
<li>I wanted something fairly meaty to actually port over to Ruby in an effort to get a more-than-superficial feel for the language</li>
<li>I might have a need for such a service in an upcoming hackathon (though the original .NET version would have been fine too)</li>
</ol>


<p>This is in no way some sort of new project or intended for some production environment.</p>

<p>So what is it?  <a href="https://github.com/kouphax/sentimentalizer/">sentamentalizer</a> is a quick and dirty <a href="http://en.wikipedia.org/wiki/Sentiment_analysis">sentiment analysis</a> tool.  With it you can loosley class statements as either positive or negative (and get a breakdown of how that classification was derived).  You "train" it with datasets for both negative and positive control statements and then feed it sentences you want analysed.  At the minute the engine sits behind a super super super, did I say super already?, simple sinatra app that you submit statements to and it returns a simple JSON response with the sentiment result (negative, positive, neutral) and probability.  If you want to train the bitch you've got to change the <code>api.rb</code> file or update the files in the <code>data\positive</code> and <code>data\negative</code> folders.</p>

<p>Plans? Yeah I might poke around some more, make into more of a standalone learning service or something (again another feature I might need soon anyway).  But for now - feel free to review my shitey code Rubyists (I assume there are better ways to do things, standard appraoches that I'm not using etc.) and offer suggestions.</p>

<p>Once again thanks to <a href="https://twitter.com/#!/martinrue">@martinrue</a> for doing all the hard-work on <a href="https://github.com/martinrue/Sentan">Sentan</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The First Day of the Rest of My Life]]></title>
    <link href="http://yobriefca.se/blog/2011/05/16/the-first-day-of-the-rest-of-my-life/"/>
    <updated>2011-05-16T00:00:00+01:00</updated>
    <id>http://yobriefca.se/blog/2011/05/16/the-first-day-of-the-rest-of-my-life</id>
    <content type="html"><![CDATA[<p>  <p>Move complete, more or less.  Still a few broken images and stuff but like the unpacked boxes of a new house these will probably remain that way until about next year or so.  Decent enough weekend project all in.  For anyone who&#8217;s interested in what&#8217;s went on under the hood &#8211; read on.</p><h2>Abandoning Posterous</h2><p><a href="http://posterous.com">Posterous</a> is great as a simple blogging platform but in terms of giving me exactly what I wanted at any point in time <a href="http://posterous.com">Posterous</a> and most other platforms didn&#8217;t give me exactly what I wanted (I am quite a demanding character I guess).</p><p>I was doing some research on .<span class="caps">NET</span> Micro Web Frameworks and came across <a href="http://jessicafx.org">Jessica</a> which was created and maintained by <a href="http://tombell.org.uk">Tom Bell</a>.</p><h2>Jekyll</h2><p>Browsing Toms <a href="http://github.com/tombell">github repo</a> I discovered he prodced his site using <a href="https://github.com/mojombo/jekyll">Jekyll</a> a Ruby based static site generator and I knew I had to have it!  So I ripped off Toms nice design, uglified it with my own tweaks and what you see now is the finished site.  This site is also mirroed on <a href="http://kouphax.github.com">Github</a> but some of the functions (category pages) are missing due to some custom generators that the Github Jekyll instance doesn&#8217;t run.</p><p>There is more to be deployed but I&#8217;d rather polish what I have before pushing more stuff out.  I&#8217;ve tinkered with Project page generation, <a href="https://github.com/schacon/showoff">Showoff</a> for presentations and a few other things that will appear over time.</p><h2>Domain Name</h2><p>Seriously &#8211; how couldn&#8217;t I go for a shiny web 2.0 ultra elite domain name given the chance?  <a href="http://gandi.net">Gandi.net</a> was recommended to me and I must admit the set up was fairly painless and their admin panel stuff is very nice.</p><h2>Appharbor</h2><p>Currently my static site is hosted on <a href="http://appharbor.com">appharbor</a>.  Appharbor is awesome.  Typically I&#8217;ve used it to spin up quick demos and stuff and the simplicity of doing a <code>git push</code> to deploy your new version is like a dream (especially given the heavy handed approach of Azure).</p><h2>Thats It</h2><p>Not sure that anyone cares about this sort of stuff but I just want to take my new process for a spin anyway.  Any questions &#8211; let me know.</p></p>
]]></content>
  </entry>
  
</feed>
