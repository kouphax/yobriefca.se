<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[<span class="label" style="margin-right:10px;"><a href="/" style="text-decoration:none; text-transform:none; color:#fff">&larr;</a></span>LinqPad | Yo Briefcase!]]></title>
  <link href="http://yobriefca.se/blog/categories/linqpad/atom.xml" rel="self"/>
  <link href="http://yobriefca.se/"/>
  <updated>2012-11-05T08:53:00+00:00</updated>
  <id>http://yobriefca.se/</id>
  <author>
    <name><![CDATA[James Hughes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LINQPad: Donât let the name fool you]]></title>
    <link href="http://yobriefca.se/blog/2009/08/26/linqpad-don-t-let-the-name-fool-you/"/>
    <updated>2009-08-26T00:00:00+01:00</updated>
    <id>http://yobriefca.se/blog/2009/08/26/linqpad-don-t-let-the-name-fool-you</id>
    <content type="html"><![CDATA[<p>  <p><p><a href="http://www.linqpad.net/">LINQPad Website</a></p><p>I&rsquo;ve been playing with this little app for a few days now and it&rsquo;s exactly what I was looking for. For the last few years I was knee deep in the crazy world of Java and in my never ending attempt to be different I researched Groovy quite a bit. One of the things that came with the installation of Groovy was a console that let me write off the cuff Groovy or Java statements without having to fire up an editor and stick all that public static void main(string[] args) boilerplate around my code, compile it and run it. I used this console a lot when debugging little bits of code, testing theories, seeing a dump of an object etc and it sped up my development no end. Since getting involved in the .NET world any time I&rsquo;ve wanted to write small test apps I&rsquo;ve had to either create a new Unit Test or new Console Application and it&rsquo;s a lot slower to do achieve the same results.</p><p>This is where LINQPad comes in. LINQPad lets you write C# (and VB) statements, expressions, programs etc and evaluates them as they are without having to write a lot of boilerplate. If your code returns an Object it can be dumped in a very neat fashion into the output window along with the generated IL and some other stuff. LINQPad, as the name suggests also lets you hook up to SQL Server, the Entity Framework, Attachable Databases etc and perform LINQ Queries, showing you the generated SQL as well.</p><blockquote><ul><li>LINQPad reports the execution time in the status bar, so you won&rsquo;t have to manually create a Stopwatch class for performance testing.</li><li>Want to test a variation of your snippet? Ctrl+Shift+C instantly clones your snippet so you can run another version side-by-side.</li><li>You can return to saved queries in single click, thanks to the My Queries treeview. Some people are using LINQPad as a scripting tool!</li></ul></blockquote><p>The licensed version gives you full Intellisense for your code plus 2 books worth (C# in a Nutshell and LINQ in Action) of working samples. Anyways here are a few screenshots of it in action. Like I said the name nearly made me skip over it but luckily I decided to try it and found what I was after!</p></p><p>[[posterous-content:HEtroelnwcgbGuFkaJnG]]</p></p>
]]></content>
  </entry>
  
</feed>
