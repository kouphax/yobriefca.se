<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Miscellaneous | Yo Briefcase!]]></title>
  <link href="http://kouphax.github.com/blog/categories/miscellaneous/atom.xml" rel="self"/>
  <link href="http://kouphax.github.com/"/>
  <updated>2012-02-26T20:14:52+00:00</updated>
  <id>http://kouphax.github.com/</id>
  <author>
    <name><![CDATA[James Hughes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Estimation 4x4]]></title>
    <link href="http://kouphax.github.com/blog/2012/02/12/the-estimation-4x4/"/>
    <updated>2012-02-12T19:36:00+00:00</updated>
    <id>http://kouphax.github.com/blog/2012/02/12/the-estimation-4x4</id>
    <content type="html"><![CDATA[<blockquote><p>This post is dedicated to one of the most influential managers I've ever had the pleasure to work with.</p></blockquote>

<p>I'm of the opinion that the moment you start trying to apply complex mathematical rigour and time to estimation you've entered into a broken system. <!-- more --> You're wasting time trying to protect yourself from finger pointing managers or getting a kicking from old school "us or them" lawyer types. None of that adds anything to the project except a big stick to beat people with and make sure they work themselves to death based a a random stab in the dark that is somehow made more realistic by the application if science. Ultimately though if the initial guesswork is wrong, and it's seldom on the nose, the science means sweet FA. So why bother? You're pleasing the wrong people. But then those people hold a lot of power.  So as long as we can keep them happy with the minimum of effort life should be sweet.</p>

<h2>The Answer</h2>

<p>Ladies and gentlemen I bring you the <strong>Estimation 4x4</strong> - guaranteed to knock those super science estimation techniques out of the park.</p>

<h2>The Science Bit</h2>

<p>Got a project to estimate?  I've done your homework for you - <strong>4 people, 4 weeks</strong>.  BOOM!  Mind Blown!  Now get on with delivering that project bro.  Oh wait it's a big ass project - 4 people, 4 months.  Oh wait you're limited by deadlines and/or resourcing - adjust as needed (3 people, 5 weeks or 5 people, 3 weeks).</p>

<h2>Balancing Act</h2>

<p>Careful now, 9 women dont make a baby in 1 month so don't assume that scaling one side up to cater for the other will get the same results.  Theres a balance that needs addressed.  This is real science after all - repsect the rule and the rule will respect you.</p>

<h2>You Gotta Be Kidding Me</h2>

<p>Dont believe me?  Try it out next time.  Do your pseudo-scientific enterprise-ready finger in the air analysis.  But hey see when that project is finished see how close the 4x4 would have brought you to the real result.  I bet 9 times out of 10 it was as accurate as your real estimate, except you could have started much sooner....</p>

<p> #winning</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Caveat Abstractor]]></title>
    <link href="http://kouphax.github.com/blog/2012/02/09/caveat-abstractor/"/>
    <updated>2012-02-09T08:37:00+00:00</updated>
    <id>http://kouphax.github.com/blog/2012/02/09/caveat-abstractor</id>
    <content type="html"><![CDATA[<p><em>Ramblings from 30,000ft.  The word abstraction is starting to sound odd.</em></p>

<p>Every time you create an abstraction there is a very good chance you've introduced unnecessary complexity into a solution.  It should never be done alone - it should be a team decision.  The goal of an abstraction is to simplify but in its untamed natural form an abstraction will only add complexity.</p>

<!-- more -->


<p>As programmers it's easy to fall into the trap whereby we want the code that we write to be the last time anyone ever has to write that code again.  We dream of creating reusable works of art that ever other developer will use and never be concerned with the low level implementation ever again.</p>

<p>This is wrong and impossible.  An anti-pattern even!</p>

<p>It baffles me that anyone would create an abstraction that they didn't have a need for at the time. It's wasteful and degrades the readability, grokability and all those other good "ilities" we use.  Of course I say this like i don't do it myself but I'd be lying to you and myself.</p>

<p>An abstraction, by definition, is an intentional hiding of implementation and knowledge but surely understanding of these things will lead to a higher chance of success in a project?  The person that created the abstraction has that understanding but it's like they dont want anyone else to know how it works.  They're ready to take that secret to their grave.</p>

<p>When you start to abstract you need to remind yourself you are building a specific solution and not a framework (unless you are of course).  Abstractions should be done only within the scope of the project and you should have a strong case to back up its creation (make the decision a team effort).  This may sound like overhead but if you find it difficult to justify the creation odds are the abstraction is unnecessary.</p>

<p>Abstractions should not be grand, they should be light and convey their intent clearly by other people (pair programming and peer review will help weed out any verbose abstractions).</p>

<p>If you are creating an abstraction for anything other than DRY, odds are youre probably creating it for YAGNI.  You'll start considering irrelevant use cases and having to cater for insane edge cases.  This will happen even if you are taking a strong test driven approach - you'll concern youself with the workings of the abstraction rather then the problem you are solving and begin creating endless "what if" tests to cater for all those "0.00000001% chance of happening" edge cases. When this happens youre going to end up in mediocrity.  Mediocre abstractions attract more abstraction.  Even in a shared codebase bad abstractions create a certain amount of implied ownership to the person that created it. Inevitably someone will come along and create an abstraction around your abstraction (even if they have access to the original source).  This in turn will likely become YAMA (Yet Another Mediocre Abstraction) attracting yet more abstraction.... You can guess where I am going with that one... Its abstractions all the way down and everytime you abstract you've decreased system comphension and likely destroyed another future developers soul.</p>

<p>In the same way guns dont kill people, people do - Abstraction dont kill projects, developers do.  You've only got yourself to blame (been there done that, will be again).  A nice simple abstraction, at the right time (e.g. When needed) can be expressive and helpful but too often we put the abstraction before the need.</p>

<p>So consider abstractions as “guilty until proven innocent” not the other way around.  Solve YOUR problem - not every other problem, not until you need to.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Craftmanship and Understanding, I Guess]]></title>
    <link href="http://kouphax.github.com/blog/2012/01/31/on-craftmanship/"/>
    <updated>2012-01-31T16:53:00+00:00</updated>
    <id>http://kouphax.github.com/blog/2012/01/31/on-craftmanship</id>
    <content type="html"><![CDATA[<p>You can stand at the station and wait for the train.  You know the one. It's the one that's always late, always packed with people, head down staring at the ground.  Or, you can walk the tracks with your own two feet. When you walk the tracks you take in your surroundings, you understand the route and you see the alternatives.  You wont beat the train everytime but when you walk the tracks you'll have better stories to tell when you get there.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enterprise Scale]]></title>
    <link href="http://kouphax.github.com/blog/2012/01/26/enterprise-scale/"/>
    <updated>2012-01-26T09:54:00+00:00</updated>
    <id>http://kouphax.github.com/blog/2012/01/26/enterprise-scale</id>
    <content type="html"><![CDATA[<p>Enterprise.  What a broken, misued term.  Its meant to sound big, huge even. I guess many years ago it used to mean big, huge, big business serious work.</p>

<p>But when you think about it, its none of those things really, not any more. <!-- more --> Even the biggest multi-nationals entire enterprise backbone throughput is probably a small fraction of Lady Gagas Twitter feed. Enterprise is just that - one enterprise. Social is global, its all of us at anytime and that is so much bigger than some old enterprise. So if you try and pimp out your CV by using the term enterprise - the only people who are probably going to care are the managers and execs that think their little boring legacy system is unique and special... Do you really want to be sold that sort of job?  All bytes are equal, some are more equal than others - Pah!  Some are more mired in unnecessary abstraction, contracts and unread, out-of-date doucmentation but they are still bytes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Standing at the cusp of 2011... WTF?]]></title>
    <link href="http://kouphax.github.com/blog/2011/12/30/2011-and-2012-review/"/>
    <updated>2011-12-30T19:51:00+00:00</updated>
    <id>http://kouphax.github.com/blog/2011/12/30/2011-and-2012-review</id>
    <content type="html"><![CDATA[<p>I'm not sure where this post is going to go in terms of content.  I'm thinking a bit of full disclosure might be quite cathartic but at the same time do you really want to know the ins and out of my somewhat awful 2011?  Compromise - I'll keep it short.  Possibly.</p>

<!-- more -->


<h2>2011 (The Bad Parts)</h2>

<p>2011 was a pretty terrible year if I'm honest.  It was the year my wife suffered two miscarriages, I got into my first car accident, stuff kept breaking and I totally dropped the ball in work when I burnt out (I'm certain I'm still feeling the effects of that).  Oh and yes on top of all that I was diagnosed with severe depression for which I am now fully medicated.  But you know what?  I'm not alone - I know a ton of people for whom (look at me I said whom - how posh) 2011 was grim.</p>

<p>So lets cast aside all the personal stuff, we've all had our problems, and let me talk about the burn out.  Long and short of it was that I took too much work on and eventually delivered unacceptable results for them all.  I have something akin to ADD when it comes to work and unless I am suitably challenged or stimulated my productivity drops to pretty much nil.  2011 was full of time consuming mundane boring work for me and as I tried desperately to pull personal value from the work (or hobbies) I started making mistakes, over committing and generally under achieving.  Lesson learned - I need to learn to say no and sometimes I just need to suck up the fact that we can't all be doing the best part of our jobs ALL THE TIME.  Sometimes we need to just knuckle down and get on with it.  Just not for a full year...</p>

<p>Anyway I became somewhat disillusioned with my employer and, truthfully, Northern Ireland.  I like other people to be excited about the stuff I preach but I felt there was a lot of disinterest and empty words.  This annoyed me and I guess I just started pushing harder, which I guess made me look quite angry and pushy.  This obviously wouldn't help.  When I looked outside of my company - Northern Ireland didn't seem that much better.  So I felt a bit out of place and I had 2 choices ahead of me.</p>

<ol>
<li>Up sticks and go somewhere that I felt would be more receptive to my extreme nerdyness and desire to share it.</li>
<li>Stick around, my company and Northern Ireland and try and make a difference.</li>
</ol>


<p>I chose the second, not being to be hero or anything but for more pragmatic reasons,</p>

<ul>
<li>My wife got pregnant again (due soon yay!), the economy is terrible and it would be too much of a risk right now</li>
<li><span class='pullquote-right' data-pullquote='It is better to invest in people and risk them leaving than to not invest in them and risk them staying '>
If I stayed in Northern Ireland, or even Ireland, I don't believe there is any other company that would support me (aka let me get away with) the things I do.  I'm not the most predictable of sorts.  I work weird hours and do strange things.  <a href="http://www.kainos.com">Kainos</a> have always been there for me and supported me.  Having done interviews with people from various levels from various other companies the state of other IT firms makes me seethe with anger. It is better to invest in people and risk them leaving than to not invest in them and risk them staying"
</span></li>
</ul>


<p>So I start 2012 with a big challenge set for myself.  That sounds about right.  The more I think about <a href="http://www.kainos.com">Kainos</a>, my employer, deserves more credit than I give it.  We have been in a space thats been all about big business types with big enterprisey solutions and delivered well.  It's not an area that exactly screams enthusiasm and I think it will take a while to draw people out of that kind of insular thinking. <a href="http://www.kainos.com">Kainos</a> certainly seems to be better than most in this area.  Now enough gushing about <a href="http://www.kainos.com">Kainos</a> (who are hiring BTW)</p>

<h2>2011 (The Good Parts)</h2>

<p>OK OK 2011 wasn't all sob stories and dullness some really cool things happened.</p>

<ul>
<li>My CodeSlice initiative in work (meet at least once a month, talk nerdy things, get <a href="http://www.kainos.com">Kainos</a> to pay for free pizza) didn't die.  In fact in the hands of one of my colleagues, Jonny Holmes, it flourished.  Attendence was never HUGE but it was consistent and varied.  May long this tradition continue and hopefully we can expand it..</li>
<li>I organised and participated in not one but two hackathons (internally).  Once again <a href="http://www.kainos.com">Kainos</a> covered the costs for our weekend long hack sessions.  Turnout was decent (about 8-12 people) with all types turning up - managers, placement students, technical architects etc.  The experience was enough for me - which is a clever way of saying the end products weren't as good as envisaged.  But we drew so many valuable lessons that the second one was infinitely more successful that the first - live and learn!  And, oh lord, the plans I have for the first half of 2012 around hackathons are going to be legendary!</li>
<li>I talked, and not just to myself but to real people, real people who were not paid to be there!  I talked, outside of work, a total of three times.  I know the number isn't huge but it was late on in the year before I decided to get out there.  Already topped that number for 2012 and the year hasn't started.  Double figures would be good next year thank you.</li>
<li>I attended <a href="http://gotocon.com/amsterdam-2011/">GOTO Amsterdam</a> were I got to meet a lot of people I have deemed awesome (because they are).  Being in rooms with like minded people (who are generally much smarter than me) saying things that make you realise you are not insane for thinking things could be better really strengthens your beliefs!</li>
<li>Shared more.  All the stuff above I did because I wanted to get my thoughts out there - I wanted to be educated as well as educate.  I was happy to look like a fool if it meant I didn't look like a fool later.  Thats hard for an introvert but damn it I gave it my best shot.  I know people, the one who only know me through my writing on <a href="http://yammer.com">Yammer</a> or half-read blog post, think I am a purist (I'm not - perfect is the enemy of better), or angry (not me, frustrated at times but never angry), or opinionated (openly opinionated perhaps) or even annoyed that everyone isn't dancing the happy geek dance like myself (as long as I'm not dancing alone on the dance floor like a sleazy old man stalking girls half his age I'm happy).  Thats fine.  People reckon I risk detracting from the message I am trying to communicate.  Fair enough.  Perhaps I need to tone it down sometimes - but I can't see that happening - it's no in my nature.  I think it's better that people see me as a purist and take some of my ideas away rather than being half-assed and them not taking anything on board!  It's inevitable that when I try and challenge peoples conceptions of technical things, especially in the open, it's going to leave a sour taste in some peoples mouths.  But thats how I roll and thats how it should be.  Sorry but there is more on the way.  But I take as good as I give so come at me bros!</li>
<li>Won a years to subscription to <a href="http://tekpub.com">Tekpub</a> on Christmas Day thanks Rob 'Santa Clause' Conrey.</li>
<li>Put my foot in it a few times.  Yeah sounds odd I am classing this as a good thing but Scott Hanselman gave me permission, and I <a href="http://www.hanselman.com/blog/BestPracticesForIndividualContribution.aspx">quote</a></li>
</ul>


<blockquote><p>Chris Sells told me once, If you’re not getting in trouble with your boss at least twice a year, you’re likely not pushing the envelope hard enough. Two slaps a year might be the cost for 10 successes. If you’re not moving forward, well, you’re not moving forward.</p></blockquote>

<h2>2012 (More like 20AWESOME! AMIRITE!)</h2>

<p>So enough dwelling in the past - how am I going to make 2012 be the awesomest?  Well thats easy - <strong>set some real fecking goals</strong>.  I failed to do that last year (outside of my typical career goals during my annual reviews of course) and ended up coasting in parts.  Not next year - hells no.  I got me a bucket list (stuff to do before the year dies - not me - unless that comes first - oh god I never thought of that).  TO THE LIST!</p>

<h3>2012 Bucket List (In No Particular Order)</h3>

<ul>
<li>Release a screencast</li>
<li>Release a game</li>
<li>Appalachian Trail</li>
<li><a href="http://givecampni.org.uk">GiveCamp NI</a></li>
<li>Talk/Present as often as possible</li>
<li>Learn a new language</li>
<li>Contribute more to OSS</li>
</ul>


<p>So let me explain some of these, as I am sure they mean sweet FA to some of you.</p>

<h3>Release a Screencast</h3>

<p>A lot of my blog posts last year were a kind of "Introduction to Technology X" and I think that sort of knowledge can be better shared via video and real coding.  Coupled with my desire to go a bit deeper in my technical posts but always getting distracted with other blog posts I think 2012 is the year I try my hand at producing a real life proper screencast (or perhaps a series).  With decent production values and what not.  The topic?  Well I am currently thinking <a href="http://nancyfx.org">Nancy</a> but I need to really get my head around it a lot than I already do - but thats fine.  Time will tell on that one.</p>

<h3>Release a Game</h3>

<p>Game programming is an area I've failed to venture into and I feel it is about time.  I wan't to do something really simple, something mobiley possibly using <a href="http://impactjs.com/">ImpactJS</a> because it interests me.  I'd like to release said game into an app store as well - just to watch it get flamed and to say "I've done it"</p>

<h3>Appalachian Trail</h3>

<p>This is a codename for a current unfunded project of mine.  The goal is to get a more fuller understanding of the spectrum of mobile development approaches, platforms and technologies.  So simply put generate a bunch of super simple (though still useful) app ideas and using every conceivable type of technology from native to web and all in-between deliver decent quality apps across all the major platforms through hackathons, team challenges, school and university outreach, app camps etc..</p>

<p>Sounds awesome doesn't it?</p>

<h3>GiveCamp NI</h3>

<blockquote><p>GiveCamp was founded by Microsoft Developer Evangelist, Chris Koenig, in Dallas, Texas in 2007. His vision was to bring together passionate developers and local charitable organisations for an entire weekend, and see what would happen.</p>

<p>In late 2012 GiveCamp is coming to Northern Ireland.</p></blockquote>

<p>Thats what the <a href="http://givecampni.org.uk/">official site</a> says (I should know I put it there).  So late next year we will run GiveCamp for the first time in Northern Ireland.  A weekend long charity focused public hackathon.  It's going to be a belter!</p>

<h3>Talk/Present as often as possible</h3>

<p>I enjoy talking about nerdy things.  I got a taste for it last year when I went public (having been talking internally to <a href="http://www.kainos.com">Kainos</a> staff for years) and in 2012 I really want to get out there as much as possible.  I find it an amazing way for me to learn as well as understand whats going on in the industry.  So far I am speaking in <a href="http://dublinalt.net/2011/12/14/january-meetup-calling-all-mobile-devs/">Dublin in January</a>, <a href="http://www.devweek.com/">Devweek in London</a> and a few other un-announced venues.</p>

<p>BTW if anyone can recommend conferences I should pitch for, or want me to come over and talk about anything in the .NET/JavaScript/Mobie world(s) (see my blog for the kind of thing I know about) - let me know!</p>

<h3>Learn a new language</h3>

<p>Everyone says this one right?  Yeah so I spent last year looking at node.js and Ruby and I think it's time to get out of my safe - I'm thinking F# - yeah that sounds sweet!</p>

<h3>Contribute more to OSS</h3>

<p>I head-dived into OSS .NET last year and loved it.  Many people see .NET as a very restricted, Microsoft led platform were every modern web-app is MVC3 with Entity Framework and WCF rules the web service world.  Thats total bull.  .NET has a very vibrant, very active OSS community.  There is almost no need to use any MS technology ever.  But lets not forget MS have really started to embrace and support OSS in a big way.  Lets hope that trend continues!</p>

<h2>In Summary</h2>

<p>Boooo to 2011, Yay to 2012.  See you around the same time next year when I have another failful year and promising myself a better one in 2013 :-P</p>
]]></content>
  </entry>
  
</feed>
